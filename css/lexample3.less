.blue{
  color: blue;
}


div{
  //simple extension or inclusion of another existing class
  &:extend(.blue);
  backgrounf-color: #ccc;
}

@dark-grey: #222;
@grey: #ccc;
@red: #f00;
@green: #0f0;
@yellow: #ff0;
@weight:500;
@size: 18px;

.left-text {
  text-align: left;
  vertical-align: top;
  line-height: 30px;
}

.centered-text{
  text-align: center;
  vertical-align: middle;
  line-height: 50px;
}
//will not be generated as independent class
.right-text(@rules) {
  @rules();
  text-align: right;
  vertical-align: bottom;
  line-height: 80px;
}

.message:extend(.centered-text) {
    margin: 10px;
    height: 50px;
    border: 1px solid @dark-grey;
    border-radius: 10px;
    .my-i{
      font-style: italic;
      font-size:@size;
    }
    .my-b{
      font-weight: @weight;
      font-size: @size;
    }
}

.info:extend(.message) {
    background-color: @grey;
}
//extends after generating code,thus the following would not work:
//.success:extend(.right-text, .message)
.success:extend(.left-text, .message) {
  //extending more than one class
  background-color: @green;
      .my-i{
        font-style: italic;
        font-size: @size;
      }
      .my-b{
        font-weight: @weight;
        font-size: @size + 2px;
      }
}

.error {
    .message;
    //even specific definitions ca be passed as parameters to mixin functions
    .right-text({  background-color: @red;});

    .my-i{
      font-style: italic;
      font-size: @size - 2px;
    }
    .my-b{
      font-weight: @weight -50;
      font-size: @size;
    }
}

.warning {
    .message;
    background-color: @yellow;
}
